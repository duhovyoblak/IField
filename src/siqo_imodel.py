#==============================================================================
# Siqo class InformationField
#------------------------------------------------------------------------------
import math
import cmath
import numpy                 as np
import random                as rnd

#from siqo_cpoint import ComplexPoint

#==============================================================================
# package's constants
#------------------------------------------------------------------------------


#==============================================================================
# package's variables
#------------------------------------------------------------------------------


#==============================================================================
# InfoModel
#------------------------------------------------------------------------------
class InfoModel:

    #==========================================================================
    # Static variables & methods
    #--------------------------------------------------------------------------

    #==========================================================================
    # Constructor & utilities
    #--------------------------------------------------------------------------
    def __init__(self, journal, name=''):
        "Calls constructor of InfoModel"

        self.journal = journal
        self.journal.I(f"InfoModel.constructor: {name}")
        
        #----------------------------------------------------------------------
        # Public datove polozky triedy
        #----------------------------------------------------------------------
        self.name      = name    # FileName of the model
        
        self.journal.O(f"{self.name}.constructor: done")

    #--------------------------------------------------------------------------
    def copy(self, name):
        "Creates copy of this InfoModel"
        
        self.journal.I(f"{self.name}.copy: To {name}")
        

        self.journal.O()
        
    #--------------------------------------------------------------------------
    def info(self, indent=0):
        "Creates info about this InfoModel"
        
        dat = {}
        msg = []

        #----------------------------------------------------------------------
        # info o cele strukture
        #----------------------------------------------------------------------
        dat['name'       ] = self.name
    
        #----------------------------------------------------------------------
        # info o dimenzii
        #----------------------------------------------------------------------
        msg.append(f"{90*'-'}")
        

        for key, val in dat.items(): msg.append("{}{:<15}: {}".format(indent*_IND, key, val))

        #----------------------------------------------------------------------
        # info
        #----------------------------------------------------------------------
        
        #----------------------------------------------------------------------
        return {'res':'OK', 'dat':dat, 'msg':msg}
        
    #--------------------------------------------------------------------------
    def __str__(self):
        "Prints info about this InfoModel"

        toRet = ''
        for line in self.info()['msg']: toRet += line +'\n'
        return toRet

    #==========================================================================
    # Structure modification
    #--------------------------------------------------------------------------
    def reset(self):
        "Clears InfoModel and reset it to dimension=1"
        
        self.journal.I(f"{self.name}.reset:")
        
        
        self.journal.O()
        
    #==========================================================================
    # API
    #--------------------------------------------------------------------------
    #==========================================================================
    # Persistency methods
    #--------------------------------------------------------------------------
    def toJson(self):
        "Converts model into json structure"
        
        self.journal.I(f'{self.name}.toJson:')
        
        toRet = {}

        self.journal.O(f'{self.name}.toJson: Converted')
        return toRet

#------------------------------------------------------------------------------
print('InfoModel ver 2.03')

#==============================================================================
#                              END OF FILE
#------------------------------------------------------------------------------