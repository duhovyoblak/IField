#==============================================================================
# Siqo class InformationField
#------------------------------------------------------------------------------
import math
import cmath
import numpy                 as np
import random                as rnd

#from siqo_cpoint import ComplexPoint

#==============================================================================
# package's constants
#------------------------------------------------------------------------------
_NAME     = 'No model defined'
_FNAME    = 'InfoModel.ifm'

#==============================================================================
# package's variables
#------------------------------------------------------------------------------


#==============================================================================
# InfoModel
#------------------------------------------------------------------------------
class InfoModel:

    #==========================================================================
    # Static variables & methods
    #--------------------------------------------------------------------------

    #==========================================================================
    # Constructor & utilities
    #--------------------------------------------------------------------------
    def __init__(self):
        "Calls constructor of InfoModel"

        self.logger.debug("InfoModel.constructor:")

        #----------------------------------------------------------------------
        # Public datove polozky triedy
        #----------------------------------------------------------------------
        self.name      = _NAME            # Name of the model
        self.fName     = _FNAME           # FileName of the model

        self.logger.debug(f"{self.name}.constructor: done")

    #--------------------------------------------------------------------------
    def copy(self, name):
        "Creates copy of this InfoModel"

        self.logger.debug(f"{self.name}.copy: To {name}")




    #--------------------------------------------------------------------------
    def info(self, indent=0):
        "Creates info about this InfoModel"

        dat = {}
        msg = []

        #----------------------------------------------------------------------
        # info o cele strukture
        #----------------------------------------------------------------------
        dat['name'       ] = self.name
        dat['fName'      ] = self.fName

        #----------------------------------------------------------------------
        # info o dimenzii
        #----------------------------------------------------------------------
        msg.append(f"{90*'-'}")
        for key, val in dat.items(): msg.append("{key}{:<15}: {val}")

        #----------------------------------------------------------------------
        # info
        #----------------------------------------------------------------------

        #----------------------------------------------------------------------
        return {'res':'OK', 'dat':dat, 'msg':msg}

    #--------------------------------------------------------------------------
    def __str__(self):
        "Prints info about this InfoModel"

        toRet = ''
        for line in self.info()['msg']: toRet += line +'\n'
        return toRet

    #==========================================================================
    # Structure modification
    #--------------------------------------------------------------------------
    def reset(self):
        "Clears InfoModel and reset it to dimension=1"

        self.logger.debug(f"{self.name}.reset:")




    #==========================================================================
    # API
    #--------------------------------------------------------------------------
    #==========================================================================
    # Persistency methods
    #--------------------------------------------------------------------------
    def toJson(self):
        "Converts model into json structure"

        self.logger.debug(f'{self.name}.toJson:')

        toRet = {}

        self.logger.debug(f'{self.name}.toJson: Converted')
        return toRet

#------------------------------------------------------------------------------
print('InfoModel ver 1.00')

#==============================================================================
#                              END OF FILE
#------------------------------------------------------------------------------